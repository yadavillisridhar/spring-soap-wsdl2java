/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn more about Gradle by exploring our samples at https://docs.gradle.org/7.5.1/samples
 * This project uses @Incubating APIs which are subject to change.
 */
plugins {
    id 'org.springframework.boot' version '2.7.6'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'maven-publish'
}

ext.cxfVersion = "3.1.6"

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    wsdl2java
}

group 'com.amysit'
version '1.0'

dependencies {
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: '2.7.6'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '2.7.6'
    implementation (group: 'org.springframework.boot', name: 'spring-boot-starter-web-services', version: '2.7.6') {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
    }
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '2.7.6'

    implementation group: 'org.apache.commons', name: 'commons-io', version: '1.3.2'

    implementation group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.11'
    implementation group: 'org.apache.httpcomponents', name: 'httpcore', version: '4.4.15'
    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.13'
    implementation group: 'commons-codec', name: 'commons-codec', version: '1.15'

    implementation group: 'com.jcraft', name: 'jsch', version: '0.1.55'

    implementation group: 'org.projectlombok', name: 'lombok-mapstruct-binding', version: '0.2.0'
    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.16'
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.16'

    /* logback-classic dependency downloads slf4j-api also */
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.9'

    wsdl2java("org.apache.cxf:cxf-tools-wsdlto-core:${cxfVersion}")
    wsdl2java("org.apache.cxf:cxf-tools-wsdlto-frontend-jaxws:${cxfVersion}")
    wsdl2java("org.apache.cxf:cxf-tools-wsdlto-databinding-jaxb:${cxfVersion}")
}

task wsdl2java(type: JavaExec) {
    main = "org.apache.cxf.tools.wsdlto.WSDLToJava"
    classpath = configurations.wsdl2java
    // Uncomment to add JVM arguments if necessary (e.g. for cert-based security)
    //jvmArgs = [
    //    "-Djavax.net.ssl.keyStore=${keystorePath}",
    //    "-Djavax.net.ssl.keyStorePassword=${keystorePassword}"
    //]
    args = [
            "-d", "src/main/java",
            "/Users/sridharyadavill/Desktop/GitLab/spring-soap-wsdl2java/src/main/resources/wsdl/global-weather.wsdl"
            // Uncomment and remove the previous line to run for multiple WSDL files
            //"-wsdlList, "wsdls.txt"
    ]
}


def gitBranchName() {
    def branch = ""
    def proc = "git rev-parse --abbrev-ref HEAD".execute()
    proc.in.eachLine { line -> branch = line }
    proc.err.eachLine { line -> println line }
    proc.waitFor()
    branch
}

bootJar {
    archiveFileName =  archiveBaseName.get() + "-"  + gitBranchName() + "-" + archiveVersion.get() + "." + archiveExtension.get()
}

test {
    useJUnitPlatform()
}

repositories {
    mavenCentral()
}